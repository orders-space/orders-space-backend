openapi: "3.0.3"
info:
  title: "orders_space_backend API"
  description: "orders_space_backend API"
  version: "1.0.0"
servers:
- url: "https://orders_space_backend"
paths:
  /places:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
    post:
      description: ""
      parameters:
      - name: "name"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "description"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "imageUrl"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Success"
                Example#2:
                  value: "Place description not specified"
                Example#3:
                  value: "Place name not specified"
  /places/{id}:
    delete:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "success"
                Example#2:
                  value: "bruh"
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Place"
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: "Invalid place ID"
  /users:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
    post:
      description: ""
      parameters:
      - name: "name"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "phone"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "email"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Success"
                Example#2:
                  value: "Failed to add user"
                Example#3:
                  value: "Either phone or email must be specified"
                Example#4:
                  value: "Username not specified"
  /users/{id}:
    delete:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "success"
                Example#2:
                  value: "bruh"
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: "Invalid user ID"
components:
  schemas:
    Place:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        description:
          type: "string"
        imageUrl:
          type: "string"
    User:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        phone:
          type: "string"
        email:
          type: "string"